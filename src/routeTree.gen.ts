/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TeacherRouteRouteImport } from './routes/teacher/route'
import { Route as StudentRouteRouteImport } from './routes/student/route'
import { Route as PrincipalRouteRouteImport } from './routes/principal/route'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as TeacherReportsRouteRouteImport } from './routes/teacher/reports/route'
import { Route as StudentReportsRouteRouteImport } from './routes/student/reports/route'
import { Route as PrincipalStudentsRouteRouteImport } from './routes/principal/students/route'
import { Route as PrincipalPeriodsRouteRouteImport } from './routes/principal/periods/route'
import { Route as PrincipalCoursesRouteRouteImport } from './routes/principal/courses/route'
import { Route as PrincipalClassesRouteRouteImport } from './routes/principal/classes/route'
import { Route as TeacherReportsIndexRouteImport } from './routes/teacher/reports/index'
import { Route as StudentReportsIndexRouteImport } from './routes/student/reports/index'
import { Route as PrincipalStudentsIndexRouteImport } from './routes/principal/students/index'
import { Route as PrincipalPeriodsIndexRouteImport } from './routes/principal/periods/index'
import { Route as PrincipalCoursesIndexRouteImport } from './routes/principal/courses/index'
import { Route as PrincipalClassesIndexRouteImport } from './routes/principal/classes/index'
import { Route as PrincipalStudentsCreateRouteImport } from './routes/principal/students/create'
import { Route as PrincipalPeriodsCreateRouteImport } from './routes/principal/periods/create'
import { Route as PrincipalCoursesCreateRouteImport } from './routes/principal/courses/create'
import { Route as PrincipalClassesCreateRouteImport } from './routes/principal/classes/create'

const TeacherRouteRoute = TeacherRouteRouteImport.update({
  id: '/teacher',
  path: '/teacher',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentRouteRoute = StudentRouteRouteImport.update({
  id: '/student',
  path: '/student',
  getParentRoute: () => rootRouteImport,
} as any)
const PrincipalRouteRoute = PrincipalRouteRouteImport.update({
  id: '/principal',
  path: '/principal',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const TeacherReportsRouteRoute = TeacherReportsRouteRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => TeacherRouteRoute,
} as any)
const StudentReportsRouteRoute = StudentReportsRouteRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => StudentRouteRoute,
} as any)
const PrincipalStudentsRouteRoute = PrincipalStudentsRouteRouteImport.update({
  id: '/students',
  path: '/students',
  getParentRoute: () => PrincipalRouteRoute,
} as any)
const PrincipalPeriodsRouteRoute = PrincipalPeriodsRouteRouteImport.update({
  id: '/periods',
  path: '/periods',
  getParentRoute: () => PrincipalRouteRoute,
} as any)
const PrincipalCoursesRouteRoute = PrincipalCoursesRouteRouteImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => PrincipalRouteRoute,
} as any)
const PrincipalClassesRouteRoute = PrincipalClassesRouteRouteImport.update({
  id: '/classes',
  path: '/classes',
  getParentRoute: () => PrincipalRouteRoute,
} as any)
const TeacherReportsIndexRoute = TeacherReportsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TeacherReportsRouteRoute,
} as any)
const StudentReportsIndexRoute = StudentReportsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StudentReportsRouteRoute,
} as any)
const PrincipalStudentsIndexRoute = PrincipalStudentsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrincipalStudentsRouteRoute,
} as any)
const PrincipalPeriodsIndexRoute = PrincipalPeriodsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrincipalPeriodsRouteRoute,
} as any)
const PrincipalCoursesIndexRoute = PrincipalCoursesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrincipalCoursesRouteRoute,
} as any)
const PrincipalClassesIndexRoute = PrincipalClassesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrincipalClassesRouteRoute,
} as any)
const PrincipalStudentsCreateRoute = PrincipalStudentsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PrincipalStudentsRouteRoute,
} as any)
const PrincipalPeriodsCreateRoute = PrincipalPeriodsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PrincipalPeriodsRouteRoute,
} as any)
const PrincipalCoursesCreateRoute = PrincipalCoursesCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PrincipalCoursesRouteRoute,
} as any)
const PrincipalClassesCreateRoute = PrincipalClassesCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PrincipalClassesRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/principal': typeof PrincipalRouteRouteWithChildren
  '/student': typeof StudentRouteRouteWithChildren
  '/teacher': typeof TeacherRouteRouteWithChildren
  '/principal/classes': typeof PrincipalClassesRouteRouteWithChildren
  '/principal/courses': typeof PrincipalCoursesRouteRouteWithChildren
  '/principal/periods': typeof PrincipalPeriodsRouteRouteWithChildren
  '/principal/students': typeof PrincipalStudentsRouteRouteWithChildren
  '/student/reports': typeof StudentReportsRouteRouteWithChildren
  '/teacher/reports': typeof TeacherReportsRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/principal/classes/create': typeof PrincipalClassesCreateRoute
  '/principal/courses/create': typeof PrincipalCoursesCreateRoute
  '/principal/periods/create': typeof PrincipalPeriodsCreateRoute
  '/principal/students/create': typeof PrincipalStudentsCreateRoute
  '/principal/classes/': typeof PrincipalClassesIndexRoute
  '/principal/courses/': typeof PrincipalCoursesIndexRoute
  '/principal/periods/': typeof PrincipalPeriodsIndexRoute
  '/principal/students/': typeof PrincipalStudentsIndexRoute
  '/student/reports/': typeof StudentReportsIndexRoute
  '/teacher/reports/': typeof TeacherReportsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/principal': typeof PrincipalRouteRouteWithChildren
  '/student': typeof StudentRouteRouteWithChildren
  '/teacher': typeof TeacherRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/principal/classes/create': typeof PrincipalClassesCreateRoute
  '/principal/courses/create': typeof PrincipalCoursesCreateRoute
  '/principal/periods/create': typeof PrincipalPeriodsCreateRoute
  '/principal/students/create': typeof PrincipalStudentsCreateRoute
  '/principal/classes': typeof PrincipalClassesIndexRoute
  '/principal/courses': typeof PrincipalCoursesIndexRoute
  '/principal/periods': typeof PrincipalPeriodsIndexRoute
  '/principal/students': typeof PrincipalStudentsIndexRoute
  '/student/reports': typeof StudentReportsIndexRoute
  '/teacher/reports': typeof TeacherReportsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/principal': typeof PrincipalRouteRouteWithChildren
  '/student': typeof StudentRouteRouteWithChildren
  '/teacher': typeof TeacherRouteRouteWithChildren
  '/principal/classes': typeof PrincipalClassesRouteRouteWithChildren
  '/principal/courses': typeof PrincipalCoursesRouteRouteWithChildren
  '/principal/periods': typeof PrincipalPeriodsRouteRouteWithChildren
  '/principal/students': typeof PrincipalStudentsRouteRouteWithChildren
  '/student/reports': typeof StudentReportsRouteRouteWithChildren
  '/teacher/reports': typeof TeacherReportsRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/principal/classes/create': typeof PrincipalClassesCreateRoute
  '/principal/courses/create': typeof PrincipalCoursesCreateRoute
  '/principal/periods/create': typeof PrincipalPeriodsCreateRoute
  '/principal/students/create': typeof PrincipalStudentsCreateRoute
  '/principal/classes/': typeof PrincipalClassesIndexRoute
  '/principal/courses/': typeof PrincipalCoursesIndexRoute
  '/principal/periods/': typeof PrincipalPeriodsIndexRoute
  '/principal/students/': typeof PrincipalStudentsIndexRoute
  '/student/reports/': typeof StudentReportsIndexRoute
  '/teacher/reports/': typeof TeacherReportsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/principal'
    | '/student'
    | '/teacher'
    | '/principal/classes'
    | '/principal/courses'
    | '/principal/periods'
    | '/principal/students'
    | '/student/reports'
    | '/teacher/reports'
    | '/auth/login'
    | '/principal/classes/create'
    | '/principal/courses/create'
    | '/principal/periods/create'
    | '/principal/students/create'
    | '/principal/classes/'
    | '/principal/courses/'
    | '/principal/periods/'
    | '/principal/students/'
    | '/student/reports/'
    | '/teacher/reports/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/principal'
    | '/student'
    | '/teacher'
    | '/auth/login'
    | '/principal/classes/create'
    | '/principal/courses/create'
    | '/principal/periods/create'
    | '/principal/students/create'
    | '/principal/classes'
    | '/principal/courses'
    | '/principal/periods'
    | '/principal/students'
    | '/student/reports'
    | '/teacher/reports'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/principal'
    | '/student'
    | '/teacher'
    | '/principal/classes'
    | '/principal/courses'
    | '/principal/periods'
    | '/principal/students'
    | '/student/reports'
    | '/teacher/reports'
    | '/auth/login'
    | '/principal/classes/create'
    | '/principal/courses/create'
    | '/principal/periods/create'
    | '/principal/students/create'
    | '/principal/classes/'
    | '/principal/courses/'
    | '/principal/periods/'
    | '/principal/students/'
    | '/student/reports/'
    | '/teacher/reports/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  PrincipalRouteRoute: typeof PrincipalRouteRouteWithChildren
  StudentRouteRoute: typeof StudentRouteRouteWithChildren
  TeacherRouteRoute: typeof TeacherRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/teacher': {
      id: '/teacher'
      path: '/teacher'
      fullPath: '/teacher'
      preLoaderRoute: typeof TeacherRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student': {
      id: '/student'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/principal': {
      id: '/principal'
      path: '/principal'
      fullPath: '/principal'
      preLoaderRoute: typeof PrincipalRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/teacher/reports': {
      id: '/teacher/reports'
      path: '/reports'
      fullPath: '/teacher/reports'
      preLoaderRoute: typeof TeacherReportsRouteRouteImport
      parentRoute: typeof TeacherRouteRoute
    }
    '/student/reports': {
      id: '/student/reports'
      path: '/reports'
      fullPath: '/student/reports'
      preLoaderRoute: typeof StudentReportsRouteRouteImport
      parentRoute: typeof StudentRouteRoute
    }
    '/principal/students': {
      id: '/principal/students'
      path: '/students'
      fullPath: '/principal/students'
      preLoaderRoute: typeof PrincipalStudentsRouteRouteImport
      parentRoute: typeof PrincipalRouteRoute
    }
    '/principal/periods': {
      id: '/principal/periods'
      path: '/periods'
      fullPath: '/principal/periods'
      preLoaderRoute: typeof PrincipalPeriodsRouteRouteImport
      parentRoute: typeof PrincipalRouteRoute
    }
    '/principal/courses': {
      id: '/principal/courses'
      path: '/courses'
      fullPath: '/principal/courses'
      preLoaderRoute: typeof PrincipalCoursesRouteRouteImport
      parentRoute: typeof PrincipalRouteRoute
    }
    '/principal/classes': {
      id: '/principal/classes'
      path: '/classes'
      fullPath: '/principal/classes'
      preLoaderRoute: typeof PrincipalClassesRouteRouteImport
      parentRoute: typeof PrincipalRouteRoute
    }
    '/teacher/reports/': {
      id: '/teacher/reports/'
      path: '/'
      fullPath: '/teacher/reports/'
      preLoaderRoute: typeof TeacherReportsIndexRouteImport
      parentRoute: typeof TeacherReportsRouteRoute
    }
    '/student/reports/': {
      id: '/student/reports/'
      path: '/'
      fullPath: '/student/reports/'
      preLoaderRoute: typeof StudentReportsIndexRouteImport
      parentRoute: typeof StudentReportsRouteRoute
    }
    '/principal/students/': {
      id: '/principal/students/'
      path: '/'
      fullPath: '/principal/students/'
      preLoaderRoute: typeof PrincipalStudentsIndexRouteImport
      parentRoute: typeof PrincipalStudentsRouteRoute
    }
    '/principal/periods/': {
      id: '/principal/periods/'
      path: '/'
      fullPath: '/principal/periods/'
      preLoaderRoute: typeof PrincipalPeriodsIndexRouteImport
      parentRoute: typeof PrincipalPeriodsRouteRoute
    }
    '/principal/courses/': {
      id: '/principal/courses/'
      path: '/'
      fullPath: '/principal/courses/'
      preLoaderRoute: typeof PrincipalCoursesIndexRouteImport
      parentRoute: typeof PrincipalCoursesRouteRoute
    }
    '/principal/classes/': {
      id: '/principal/classes/'
      path: '/'
      fullPath: '/principal/classes/'
      preLoaderRoute: typeof PrincipalClassesIndexRouteImport
      parentRoute: typeof PrincipalClassesRouteRoute
    }
    '/principal/students/create': {
      id: '/principal/students/create'
      path: '/create'
      fullPath: '/principal/students/create'
      preLoaderRoute: typeof PrincipalStudentsCreateRouteImport
      parentRoute: typeof PrincipalStudentsRouteRoute
    }
    '/principal/periods/create': {
      id: '/principal/periods/create'
      path: '/create'
      fullPath: '/principal/periods/create'
      preLoaderRoute: typeof PrincipalPeriodsCreateRouteImport
      parentRoute: typeof PrincipalPeriodsRouteRoute
    }
    '/principal/courses/create': {
      id: '/principal/courses/create'
      path: '/create'
      fullPath: '/principal/courses/create'
      preLoaderRoute: typeof PrincipalCoursesCreateRouteImport
      parentRoute: typeof PrincipalCoursesRouteRoute
    }
    '/principal/classes/create': {
      id: '/principal/classes/create'
      path: '/create'
      fullPath: '/principal/classes/create'
      preLoaderRoute: typeof PrincipalClassesCreateRouteImport
      parentRoute: typeof PrincipalClassesRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface PrincipalClassesRouteRouteChildren {
  PrincipalClassesCreateRoute: typeof PrincipalClassesCreateRoute
  PrincipalClassesIndexRoute: typeof PrincipalClassesIndexRoute
}

const PrincipalClassesRouteRouteChildren: PrincipalClassesRouteRouteChildren = {
  PrincipalClassesCreateRoute: PrincipalClassesCreateRoute,
  PrincipalClassesIndexRoute: PrincipalClassesIndexRoute,
}

const PrincipalClassesRouteRouteWithChildren =
  PrincipalClassesRouteRoute._addFileChildren(
    PrincipalClassesRouteRouteChildren,
  )

interface PrincipalCoursesRouteRouteChildren {
  PrincipalCoursesCreateRoute: typeof PrincipalCoursesCreateRoute
  PrincipalCoursesIndexRoute: typeof PrincipalCoursesIndexRoute
}

const PrincipalCoursesRouteRouteChildren: PrincipalCoursesRouteRouteChildren = {
  PrincipalCoursesCreateRoute: PrincipalCoursesCreateRoute,
  PrincipalCoursesIndexRoute: PrincipalCoursesIndexRoute,
}

const PrincipalCoursesRouteRouteWithChildren =
  PrincipalCoursesRouteRoute._addFileChildren(
    PrincipalCoursesRouteRouteChildren,
  )

interface PrincipalPeriodsRouteRouteChildren {
  PrincipalPeriodsCreateRoute: typeof PrincipalPeriodsCreateRoute
  PrincipalPeriodsIndexRoute: typeof PrincipalPeriodsIndexRoute
}

const PrincipalPeriodsRouteRouteChildren: PrincipalPeriodsRouteRouteChildren = {
  PrincipalPeriodsCreateRoute: PrincipalPeriodsCreateRoute,
  PrincipalPeriodsIndexRoute: PrincipalPeriodsIndexRoute,
}

const PrincipalPeriodsRouteRouteWithChildren =
  PrincipalPeriodsRouteRoute._addFileChildren(
    PrincipalPeriodsRouteRouteChildren,
  )

interface PrincipalStudentsRouteRouteChildren {
  PrincipalStudentsCreateRoute: typeof PrincipalStudentsCreateRoute
  PrincipalStudentsIndexRoute: typeof PrincipalStudentsIndexRoute
}

const PrincipalStudentsRouteRouteChildren: PrincipalStudentsRouteRouteChildren =
  {
    PrincipalStudentsCreateRoute: PrincipalStudentsCreateRoute,
    PrincipalStudentsIndexRoute: PrincipalStudentsIndexRoute,
  }

const PrincipalStudentsRouteRouteWithChildren =
  PrincipalStudentsRouteRoute._addFileChildren(
    PrincipalStudentsRouteRouteChildren,
  )

interface PrincipalRouteRouteChildren {
  PrincipalClassesRouteRoute: typeof PrincipalClassesRouteRouteWithChildren
  PrincipalCoursesRouteRoute: typeof PrincipalCoursesRouteRouteWithChildren
  PrincipalPeriodsRouteRoute: typeof PrincipalPeriodsRouteRouteWithChildren
  PrincipalStudentsRouteRoute: typeof PrincipalStudentsRouteRouteWithChildren
}

const PrincipalRouteRouteChildren: PrincipalRouteRouteChildren = {
  PrincipalClassesRouteRoute: PrincipalClassesRouteRouteWithChildren,
  PrincipalCoursesRouteRoute: PrincipalCoursesRouteRouteWithChildren,
  PrincipalPeriodsRouteRoute: PrincipalPeriodsRouteRouteWithChildren,
  PrincipalStudentsRouteRoute: PrincipalStudentsRouteRouteWithChildren,
}

const PrincipalRouteRouteWithChildren = PrincipalRouteRoute._addFileChildren(
  PrincipalRouteRouteChildren,
)

interface StudentReportsRouteRouteChildren {
  StudentReportsIndexRoute: typeof StudentReportsIndexRoute
}

const StudentReportsRouteRouteChildren: StudentReportsRouteRouteChildren = {
  StudentReportsIndexRoute: StudentReportsIndexRoute,
}

const StudentReportsRouteRouteWithChildren =
  StudentReportsRouteRoute._addFileChildren(StudentReportsRouteRouteChildren)

interface StudentRouteRouteChildren {
  StudentReportsRouteRoute: typeof StudentReportsRouteRouteWithChildren
}

const StudentRouteRouteChildren: StudentRouteRouteChildren = {
  StudentReportsRouteRoute: StudentReportsRouteRouteWithChildren,
}

const StudentRouteRouteWithChildren = StudentRouteRoute._addFileChildren(
  StudentRouteRouteChildren,
)

interface TeacherReportsRouteRouteChildren {
  TeacherReportsIndexRoute: typeof TeacherReportsIndexRoute
}

const TeacherReportsRouteRouteChildren: TeacherReportsRouteRouteChildren = {
  TeacherReportsIndexRoute: TeacherReportsIndexRoute,
}

const TeacherReportsRouteRouteWithChildren =
  TeacherReportsRouteRoute._addFileChildren(TeacherReportsRouteRouteChildren)

interface TeacherRouteRouteChildren {
  TeacherReportsRouteRoute: typeof TeacherReportsRouteRouteWithChildren
}

const TeacherRouteRouteChildren: TeacherRouteRouteChildren = {
  TeacherReportsRouteRoute: TeacherReportsRouteRouteWithChildren,
}

const TeacherRouteRouteWithChildren = TeacherRouteRoute._addFileChildren(
  TeacherRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  PrincipalRouteRoute: PrincipalRouteRouteWithChildren,
  StudentRouteRoute: StudentRouteRouteWithChildren,
  TeacherRouteRoute: TeacherRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
